---
// Assets
import { Image } from "astro:assets";
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/fundations/elements/Text.astro";
import Button from "@/components/fundations/elements/Button.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
// Components
import CourseEntry from "@/components/courses/CourseEntry.astro";
// Icons
import Play from "@/components/fundations/icons/Play.astro";
import Lock from "@/components/fundations/icons/Lock.astro";
// Content
import { getEntry, getCollection } from "astro:content";
const { frontmatter } = Astro.props;
const teacher = await getEntry("teachers", frontmatter.teacher);
const allCourses = await getCollection("courses");
const relatedCourses = allCourses.filter(
  (c) =>
    c.slug !== Astro.url.pathname.split("/").filter(Boolean).pop() &&
    c.data.tags?.some((tag) => frontmatter.tags?.includes(tag))
);
const allLessons = await getCollection("lessons");
const lessonsForThisCourse = allLessons.filter(
  (l) => l.data.course === frontmatter.slug
);
// Sidebar structure
const sidebarSections = frontmatter.sections.map((section) => ({
  ...section,
  lessons: section.lessons.map((slug) => ({
    slug,
    isActive: false, // Optional: logic for active slug if needed
  })),
}));
---

<BaseLayout>
  <Wrapper variant="standard" class="pt-48 pb-24">
    <div class="grid gap-8 grid-cols-1 lg:grid-cols-3 lg:items-start">
      <div class="text-balance lg:col-span-2">
        <div class="text-balance">
          <Text tag="h1" variant="displaySM" class="font-medium text-base-900">
            {frontmatter.title}
          </Text>
          <Text tag="p" variant="textSM" class="mt-2 text-base-500">
            {frontmatter.description}
          </Text>
        </div>
        <video controls class="w-full mt-4" src={frontmatter.videoUrl}></video>
        <div class="mt-4">
          <div class="flex items-center justify-between gap-2">
            <Text tag="h2" variant="textBase" class="font-medium text-base-900">
              Course Content
            </Text>
            <Text tag="p" variant="textXS" class="text-base-500">
              <span class="font-mono font-medium">
                {frontmatter.sections.length}</span
              > Units <span aria-hidden="true">/</span>
              <span class="font-mono font-medium"
                >{lessonsForThisCourse.length}</span
              > Lessons
            </Text>
          </div>
          <div class="mt-12 space-y-8">
            {
              sidebarSections.map((section, i) => (
                <div>
                  <Text
                    tag="h3"
                    variant="textSM"
                    class="mb-2 font-medium text-base-700"
                  >
                    Unit {i + 1}: {section.title}
                  </Text>
                  <ul class="space-y-1">
                    {section.lessons.map((lesson) => {
                      const matched = allLessons.find(
                        (l) => l.slug === lesson.slug
                      );
                      if (!matched) {
                        return (
                          <li class="text-sm text-red-600">
                            Missing: {lesson.slug}
                          </li>
                        );
                      }
                      const slug = matched.slug.split("/")[1];
                      return (
                        <li class="p-4 bg-base-50 grid grid-cols-2 md:grid-cols-3 gap-4">
                          <div class="col-span-2">
                            <Text
                              tag="h3"
                              variant="textSM"
                              class="font-medium text-base-900"
                            >
                              {matched.data.title}
                            </Text>
                            <span class="block text-xs text-base-500">
                              Duration: {matched.data.duration}
                            </span>
                          </div>

                          <Button
                            iconOnly
                            isLink={true}
                            size="xs"
                            variant="muted"
                            href={`/courses/${frontmatter.slug}/${slug}`}
                            class="ml-auto"
                          >
                            {matched.data.isLocked ? (
                              <Lock slot="icon" size="sm" />
                            ) : (
                              <Play slot="icon" size="sm" />
                            )}
                          </Button>
                        </li>
                      );
                    })}
                  </ul>
                </div>
              ))
            }
          </div>
        </div>
      </div>
      <aside class="order-first lg:order-last">
        <div class="lg:sticky lg:top-24">
          <div class="bg-base-50 divide-y divide-base-200">
            {
              teacher && (
                <div class="p-4">
                  <Text
                    tag="h2"
                    variant="textSM"
                    class="font-medium text-base-900 "
                  >
                    Meet your teacher
                  </Text>
                  <div class="mt-8 ">
                    <div class="flex items-center gap-3 ">
                      <Image
                        src={teacher.data.image.url}
                        alt={teacher.data.image.alt}
                        width={200}
                        height={200}
                        class="object-cover rounded-full size-12 shrink-0"
                      />
                      <div>
                        <Text
                          tag="p"
                          variant="textSM"
                          class="font-medium text-base-900"
                        >
                          {teacher.data.name}
                        </Text>
                        <Text tag="p" variant="textXS" class="text-base-500">
                          {teacher.data.role} at
                          {teacher.data.org}
                        </Text>
                      </div>
                    </div>
                    <Text
                      tag="p"
                      variant="textXS"
                      class="mt-2 text-base-500 line-clamp-3"
                    >
                      {teacher.data.bio}
                    </Text>
                  </div>
                </div>
              )
            }
            <div class="p-4">
              <Text tag="h2" variant="textSM" class="font-medium text-base-900">
                Skills
              </Text>
              <ul
                role="list"
                class="mt-8 text-xs grid grid-cols-1 gap-1 text-base-500"
              >
                {
                  frontmatter.skills.map((skill) => (
                    <li>
                      <span class="font-medium text-base-500">{skill}</span>
                    </li>
                  ))
                }
              </ul>
            </div>
            <div class="p-4">
              <Text tag="h2" variant="textSM" class="font-medium text-base-900">
                Course Info
              </Text>
              <ul class="mt-8 text-base-600 space-y-1">
                <li>
                  <Text tag="p" variant="textXS"
                    ><span
                      class="font-medium text-base-900 group-hover:text-white"
                      >Duration:</span
                    >
                    {frontmatter.duration}
                  </Text>
                </li>
                <li>
                  <Text tag="p" variant="textXS"
                    ><span
                      class="font-medium text-base-900 group-hover:text-white"
                      >Lessons:</span
                    >
                    {lessonsForThisCourse.length}
                  </Text>
                </li>
                <li>
                  <Text tag="p" variant="textXS"
                    ><span
                      class="font-medium text-base-900 group-hover:text-white"
                      >Price:</span
                    >
                    {frontmatter.isFree ? "Free" : `$${frontmatter.price}`}
                  </Text>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </aside>
    </div>
  </Wrapper>
  {
    relatedCourses.length > 0 && (
      <section>
        <Wrapper variant="standard" class="py-24">
          <Text tag="h2" variant="displaySM" class="font-medium text-base-900 ">
            More courses you might like
          </Text>
          <div class="mt-4  grid grid-cols-1 gap-1 md:grid-cols-2">
            {relatedCourses.slice(0, 3).map((post) => (
              <CourseEntry post={post} />
            ))}
          </div>
        </Wrapper>
      </section>
    )
  }
</BaseLayout>
